CPU四核：同一时间真真正正可以干四个任务
CPU单核执行20个任务，看上去也是并发的，(实际上永远都是串行的)

但是在python中无论你的CPU有几核，永远都是假象，同一时间，执行的任务只有一个(算是Cpython的一个缺陷)
python的线程解释器是直接调用的C语言的线程接口，等待结果(控制不了过程，如果是4核的相当于copy了四份一起运行(控制不了哪个CPU先执行，因为调用的C的函数，只能等待结果) )
为了避免出错(因为四个cpu同时计算，同时返回结果，要是结果不一致怎么办？)，加了GIL：同一时间只有一核拿到了数据，同一时间只有一个核在运行


像是java，C++都是自己实现的线程，所以完全没有这个问题，jpython也没有这个问题，pypy以后也没有这个问题，只有CPython有这个问题
到现在为止，在CPython上去掉GIL已经是一个不可能的事情了，语言的核心基石部分( 利用的cCPU上下文切换的优势 )

